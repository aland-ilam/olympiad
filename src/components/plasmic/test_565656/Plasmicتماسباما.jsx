// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: eCbx7HJgm8FWkx1AoTEmGN
// Component: UuPtA4e2flHy
import * as React from "react";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  hasVariant
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Header from "../../Header"; // plasmic-import: Zb29Ge7OY3u9/component
import Header002 from "../../Header002"; // plasmic-import: 3GrQwBTmc9Ka/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import Footer2 from "../../Footer2"; // plasmic-import: BFroENaJU506/component
import { useScreenVariants as useScreenVariantsyOfg4D6YmtF } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: yOfg4d6Ymt_f/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: eCbx7HJgm8FWkx1AoTEmGN/projectcss
import sty from "./Plasmicتماسباما.module.css"; // plasmic-import: UuPtA4e2flHy/css
import _30RemovebgPreviewPngDthjRu9OiLmw from "./images/_30RemovebgPreviewPng.png"; // plasmic-import: DthjRu9OiLmw/picture

createPlasmicElementProxy;

export const Plasmicتماسباما__VariantProps = new Array();

export const Plasmicتماسباما__ArgProps = new Array();

const $$ = {};

function Plasmicتماسباما__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsyOfg4D6YmtF()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <Stack__
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
          dir={"rtl"}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <Header002
            data-plasmic-name={"header002"}
            data-plasmic-override={overrides.header002}
            className={classNames("__wab_instance", sty.header002)}
          />

          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__cwjgh)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__zyVpu)}>
              <Stack__
                as={"div"}
                data-plasmic-name={"columns"}
                data-plasmic-override={overrides.columns}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns)}
              >
                <div className={classNames(projectcss.all, sty.column__pyY8I)}>
                  <PlasmicImg__
                    data-plasmic-name={"img"}
                    data-plasmic-override={overrides.img}
                    alt={""}
                    className={classNames(sty.img)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "100%"
                        : "500px"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "auto"
                        : "100%"
                    }
                    loading={"lazy"}
                    src={{
                      src: _30RemovebgPreviewPngDthjRu9OiLmw,
                      fullWidth: 526,
                      fullHeight: 474,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.column__u4XJ)}
                  dir={"rtl"}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__f5DQh)}
                  >
                    <h2
                      data-plasmic-name={"h2"}
                      data-plasmic-override={overrides.h2}
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2
                      )}
                    >
                      {
                        "\u0645\u0627 \u062f\u0631 \u0627\u0644\u0645\u067e\u06cc\u0627\u062f \u0647\u0648\u0634 \u0645\u0635\u0646\u0648\u0639\u06cc \u0622\u0644\u0646\u062f \u0647\u0645\u06cc\u0634\u0647 \u0622\u0645\u0627\u062f\u0647 \u0634\u0646\u06cc\u062f\u0646 \u0646\u0638\u0631\u0627\u062a\u060c \u067e\u06cc\u0634\u0646\u0647\u0627\u062f\u0627\u062a \u0648 \u0633\u0648\u0627\u0644\u0627\u062a \u0634\u0645\u0627 \u0647\u0633\u062a\u06cc\u0645!\n"
                      }
                    </h2>
                    <div
                      data-plasmic-name={"text"}
                      data-plasmic-override={overrides.text}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text
                      )}
                      dir={"rtl"}
                    >
                      {
                        "\u0627\u06af\u0631 \u0633\u0648\u0627\u0644\u06cc \u062f\u0631\u0628\u0627\u0631\u0647 \u0627\u0644\u0645\u067e\u06cc\u0627\u062f \u062f\u0627\u0631\u06cc\u062f \u06cc\u0627 \u0646\u06cc\u0627\u0632 \u0628\u0647 \u0631\u0627\u0647\u0646\u0645\u0627\u06cc\u06cc \u0628\u06cc\u0634\u062a\u0631\u06cc \u062f\u0627\u0631\u06cc\u062f\u060c \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0632 \u0631\u0627\u0647\u200c\u0647\u0627\u06cc \u0632\u06cc\u0631 \u0628\u0627 \u0645\u0627 \u062f\u0631 \u0627\u0631\u062a\u0628\u0627\u0637 \u0628\u0627\u0634\u06cc\u062f:\n\u0646\u0634\u0627\u0646\u06cc \u0645\u0627 \u062f\u0631 \u0634\u0627\u062f \u0648 \u062a\u0644\u06af\u0631\u0627\u0645: Aland_AI@\n\u0627\u06cc\u0645\u06cc\u0644 \u0645\u0627: dotavvab@gmail.com\n\u0647\u0645\u0686\u0646\u06cc\u0646 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u06cc\u062f \u0641\u0631\u0645 \u062a\u0645\u0627\u0633 \u0632\u06cc\u0631 \u0631\u0627 \u062a\u06a9\u0645\u06cc\u0644 \u06a9\u0646\u06cc\u062f."
                      }
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__yggin)}
                    >
                      <Embed
                        data-plasmic-name={"embedHtml"}
                        data-plasmic-override={overrides.embedHtml}
                        className={classNames("__wab_instance", sty.embedHtml)}
                        code={
                          "<div id=\"flhYVLQ8\" style=\"min-height: 480px; position: relative;\">\r\n    <div id=\"porsline-loading-flhYVLQ8\" style=\"position: absolute; top: 50%; left: 50%; width: auto; height: 35px; border: 4px solid rgba(0, 0, 0, 0.1); border-top: 4px solid #555; border-radius: 50%; animation: spin-flhYVLQ8 1s linear infinite;\"></div>\r\n    <script>\r\n      const styleSheet = document.createElement('style');\r\n      styleSheet.innerHTML = `@keyframes spin-flhYVLQ8 {\r\n          0% { transform: rotate(0deg); }\r\n          100% { transform: rotate(360deg); }\r\n        }`;\r\n      document.head.appendChild(styleSheet);\r\n      const loadingIndicator = document.getElementById('porsline-loading-flhYVLQ8');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.fetchPriority = 'high';\r\n      script.onload = function() {\r\n        loadingIndicator.style.display = 'none';\r\n      };\r\n      script.src = 'https://survey.porsline.ir/embed/eyJ3aWR0aCI6IjEwMCUiLCJoZWlnaHQiOiIxMDAlIiwiYm9yZGVyIjoibm9uZSJ9/flhYVLQ8';\r\n      document.getElementById('flhYVLQ8').appendChild(script);\r\n    </script>\r\n  </div>"
                        }
                      />
                    </div>
                  </Stack__>
                </div>
              </Stack__>
            </div>
          </Stack__>
          <Footer2
            data-plasmic-name={"footer2"}
            data-plasmic-override={overrides.footer2}
            className={classNames("__wab_instance", sty.footer2)}
          />
        </Stack__>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "header002",
    "columns",
    "img",
    "h2",
    "text",
    "embedHtml",
    "footer2"
  ],

  header: ["header"],
  header002: ["header002"],
  columns: ["columns", "img", "h2", "text", "embedHtml"],
  img: ["img"],
  h2: ["h2"],
  text: ["text"],
  embedHtml: ["embedHtml"],
  footer2: ["footer2"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: Plasmicتماسباما__ArgProps,
          internalVariantPropNames: Plasmicتماسباما__VariantProps
        }),
      [props, nodeName]
    );
    return Plasmicتماسباما__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName =
      "Plasmic\u062a\u0645\u0627\u0633\u0628\u0627\u0645\u0627";
  } else {
    func.displayName = `Plasmicتماسباما.${nodeName}`;
  }
  return func;
}

export const Plasmicتماسباما = Object.assign(
  // Top-level Plasmicتماسباما renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    header002: makeNodeComponent("header002"),
    columns: makeNodeComponent("columns"),
    img: makeNodeComponent("img"),
    h2: makeNodeComponent("h2"),
    text: makeNodeComponent("text"),
    embedHtml: makeNodeComponent("embedHtml"),
    footer2: makeNodeComponent("footer2"),
    // Metadata about props expected for Plasmicتماسباما
    internalVariantProps: Plasmicتماسباما__VariantProps,
    internalArgProps: Plasmicتماسباما__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default Plasmicتماسباما;
/* prettier-ignore-end */
