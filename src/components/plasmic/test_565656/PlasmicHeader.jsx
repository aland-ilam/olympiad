// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: eCbx7HJgm8FWkx1AoTEmGN
// Component: Zb29Ge7OY3u9
import * as React from "react";
import {
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  hasVariant
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import HeaderMenu from "../../HeaderMenu"; // plasmic-import: cca3NDm-B76v/component
import { useScreenVariants as useScreenVariantsyOfg4D6YmtF } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: yOfg4d6Ymt_f/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: eCbx7HJgm8FWkx1AoTEmGN/projectcss
import sty from "./PlasmicHeader.module.css"; // plasmic-import: Zb29Ge7OY3u9/css
import Icon29Icon from "./icons/PlasmicIcon__Icon29"; // plasmic-import: rzUu4x84rFcl/icon
import Home24Dp5F6368Fill0Wght400Grad0Opsz24SvgIcon from "./icons/PlasmicIcon__Home24Dp5F6368Fill0Wght400Grad0Opsz24Svg"; // plasmic-import: 5_x5jquxnN8E/icon
import Info24Dp5F6368Fill0Wght400Grad0Opsz24SvgIcon from "./icons/PlasmicIcon__Info24Dp5F6368Fill0Wght400Grad0Opsz24Svg"; // plasmic-import: Sqtp5kUOdXxM/icon
import PhoneInTalk24Dp5F6368Fill0Wght400Grad0Opsz24SvgIcon from "./icons/PlasmicIcon__PhoneInTalk24Dp5F6368Fill0Wght400Grad0Opsz24Svg"; // plasmic-import: BTvNmofwISmH/icon
import untitledDesignSvgM6ZghyTdTlDe from "./images/untitledDesignSvg.svg"; // plasmic-import: m6ZghyTDTlDE/picture

createPlasmicElementProxy;

export const PlasmicHeader__VariantProps = new Array();

export const PlasmicHeader__ArgProps = new Array();

const $$ = {};

function PlasmicHeader__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsyOfg4D6YmtF()
  });
  return (
    <Stack__
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
      dir={"rtl"}
    >
      <Stack__
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__hUqx7)}
      >
        <PlasmicLink__
          className={classNames(projectcss.all, projectcss.a, sty.link__zy28R)}
          platform={"react"}
        >
          <PlasmicImg__
            data-plasmic-name={"img"}
            data-plasmic-override={overrides.img}
            alt={""}
            className={classNames(sty.img)}
            displayHeight={"100%"}
            displayMaxHeight={"none"}
            displayMaxWidth={"auto"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "30px"
                : "60px"
            }
            src={{
              src: untitledDesignSvgM6ZghyTdTlDe,
              fullWidth: 375,
              fullHeight: 375,
              aspectRatio: 1
            }}
          />
        </PlasmicLink__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox___2Auf8)}
        >
          <Stack__
            as={PlasmicLink__}
            hasGap={true}
            className={classNames(
              projectcss.all,
              projectcss.a,
              sty.link__vSmzN
            )}
            onClick={async event => {
              const $steps = {};
              $steps["goToHome"] = true
                ? (() => {
                    const actionArgs = { destination: `/` };
                    return (({ destination }) => {
                      if (
                        typeof destination === "string" &&
                        destination.startsWith("#")
                      ) {
                        document
                          .getElementById(destination.substr(1))
                          .scrollIntoView({ behavior: "smooth" });
                      } else {
                        location.assign(destination);
                      }
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["goToHome"] != null &&
                typeof $steps["goToHome"] === "object" &&
                typeof $steps["goToHome"].then === "function"
              ) {
                $steps["goToHome"] = await $steps["goToHome"];
              }
              $steps["updateStateVariable"] = true
                ? (() => {
                    const actionArgs = {};
                    return (({ variable, value, startIndex, deleteCount }) => {
                      if (!variable) {
                        return;
                      }
                      const { objRoot, variablePath } = variable;
                      undefined;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateStateVariable"] != null &&
                typeof $steps["updateStateVariable"] === "object" &&
                typeof $steps["updateStateVariable"].then === "function"
              ) {
                $steps["updateStateVariable"] = await $steps[
                  "updateStateVariable"
                ];
              }
            }}
            platform={"react"}
          >
            {false ? (
              <Icon29Icon
                className={classNames(projectcss.all, sty.svg__iZAup)}
                role={"img"}
              />
            ) : null}
            <Home24Dp5F6368Fill0Wght400Grad0Opsz24SvgIcon
              className={classNames(projectcss.all, sty.svg__nvZsj)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__x3Atu
              )}
            >
              {"\u062e\u0627\u0646\u0647"}
            </div>
            {false ? (
              <Icon29Icon
                className={classNames(projectcss.all, sty.svg___1Sp5T)}
                role={"img"}
              />
            ) : null}
            <HeaderMenu
              data-plasmic-name={"headerMenu"}
              data-plasmic-override={overrides.headerMenu}
              className={classNames("__wab_instance", sty.headerMenu)}
            />
          </Stack__>
          <Stack__
            as={PlasmicLink__}
            data-plasmic-name={"aboutUs"}
            data-plasmic-override={overrides.aboutUs}
            hasGap={true}
            className={classNames(projectcss.all, projectcss.a, sty.aboutUs)}
            platform={"react"}
          >
            {false ? (
              <Icon29Icon
                className={classNames(projectcss.all, sty.svg__w3Oql)}
                role={"img"}
              />
            ) : null}
            {false ? (
              <Icon29Icon
                className={classNames(projectcss.all, sty.svg__sSi5D)}
                role={"img"}
              />
            ) : null}
            <Info24Dp5F6368Fill0Wght400Grad0Opsz24SvgIcon
              className={classNames(projectcss.all, sty.svg___0Qq4F)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__g1HBm
              )}
              onClick={async event => {
                const $steps = {};
                $steps["goToدربارهما"] = true
                  ? (() => {
                      const actionArgs = { destination: `/about` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          location.assign(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToدربارهما"] != null &&
                  typeof $steps["goToدربارهما"] === "object" &&
                  typeof $steps["goToدربارهما"].then === "function"
                ) {
                  $steps["goToدربارهما"] = await $steps["goToدربارهما"];
                }
                $steps["updateStateVariable"] = true
                  ? (() => {
                      const actionArgs = {};
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;
                        undefined;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateStateVariable"] != null &&
                  typeof $steps["updateStateVariable"] === "object" &&
                  typeof $steps["updateStateVariable"].then === "function"
                ) {
                  $steps["updateStateVariable"] = await $steps[
                    "updateStateVariable"
                  ];
                }
              }}
            >
              {"\u062f\u0631\u0628\u0627\u0631\u0647 \u0645\u0627"}
            </div>
          </Stack__>
          <Stack__
            as={PlasmicLink__}
            hasGap={true}
            className={classNames(
              projectcss.all,
              projectcss.a,
              sty.link__lvIqp
            )}
            platform={"react"}
          >
            {false ? (
              <Icon29Icon
                className={classNames(projectcss.all, sty.svg__hdgc6)}
                role={"img"}
              />
            ) : null}
            <PhoneInTalk24Dp5F6368Fill0Wght400Grad0Opsz24SvgIcon
              className={classNames(projectcss.all, sty.svg___7HYqZ)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__oWdvL
              )}
              onClick={async event => {
                const $steps = {};
                $steps["goToتماسباما"] = true
                  ? (() => {
                      const actionArgs = { destination: `/new-page` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          location.assign(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToتماسباما"] != null &&
                  typeof $steps["goToتماسباما"] === "object" &&
                  typeof $steps["goToتماسباما"].then === "function"
                ) {
                  $steps["goToتماسباما"] = await $steps["goToتماسباما"];
                }
                $steps["updateStateVariable"] = true
                  ? (() => {
                      const actionArgs = {};
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;
                        undefined;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateStateVariable"] != null &&
                  typeof $steps["updateStateVariable"] === "object" &&
                  typeof $steps["updateStateVariable"].then === "function"
                ) {
                  $steps["updateStateVariable"] = await $steps[
                    "updateStateVariable"
                  ];
                }
              }}
            >
              {"\u062a\u0645\u0627\u0633 \u0628\u0627 \u0645\u0627"}
            </div>
            {false ? (
              <Icon29Icon
                className={classNames(projectcss.all, sty.svg__pho1V)}
                role={"img"}
              />
            ) : null}
          </Stack__>
        </Stack__>
      </Stack__>
    </Stack__>
  );
}

const PlasmicDescendants = {
  root: ["root", "img", "headerMenu", "aboutUs"],
  img: ["img"],
  headerMenu: ["headerMenu"],
  aboutUs: ["aboutUs"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHeader__ArgProps,
          internalVariantPropNames: PlasmicHeader__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHeader__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHeader";
  } else {
    func.displayName = `PlasmicHeader.${nodeName}`;
  }
  return func;
}

export const PlasmicHeader = Object.assign(
  // Top-level PlasmicHeader renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    img: makeNodeComponent("img"),
    headerMenu: makeNodeComponent("headerMenu"),
    aboutUs: makeNodeComponent("aboutUs"),
    // Metadata about props expected for PlasmicHeader
    internalVariantProps: PlasmicHeader__VariantProps,
    internalArgProps: PlasmicHeader__ArgProps
  }
);

export default PlasmicHeader;
/* prettier-ignore-end */
